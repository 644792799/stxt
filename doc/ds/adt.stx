[adt]抽象資料型態
-----------------
一組資料值集合和作用於集合上操作的序對，
此序對獨立於任何實作。
因此任何僅使用此序對的操作，及資料值的客戶程式，
在抽換此序對底層的實作並不會影響客戶程式，

換句話說，客戶程式不需要改寫任何程式碼，
這稱為抽象型態獨立性，
由此可知抽象資料型態為客戶層隱藏了實作的細節，
讓客戶層能用更為簡易的方式操作資料。

從以下的應用，
可以歸納出模型包含一組抽象資料型態。

資料庫模型的抽象化(database model)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
關於上述抽象資料型態一個有趣應用便是資料庫模型的抽象化，
一般資料庫設計者會把資料庫模型依抽象程序由低而高分成三層，
實體層、
邏輯層及概念層。

實體層上的操作主要負責將資料持久化於硬體上。

概念層上的主要提供一組更為簡易的抽象資料型態，及相關的操作，
讓資料庫管理師能簡便的查詢、插入、更新及定義資料庫儲存的資料，
像主流的關連式模型，
便包含一組威力強大的抽象資料型態。

概念層上的提供更為簡易的資料型態，
僅讓使用者能操作其業務上所必要的資料，
目前主流的是實體關係模型。

網路模型的抽象化(network model)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
網路也藉由將網路的問題抽象出來，
讓設計者更能專注問題本身的設計。

例如 TCP/IP 模型網路層提供上層模型，
能簡單的以IP 位址來表示資料要傳遞到那一台主機上，
而不必指出資料要透過那些機制，或經過那些主機來到達目的主機，
所以 TCP/IP 模型包含四組抽象資料型態，
用來描述網路行為。

定義抽象資料型態的方法(define abstract data type)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1.使用資料值組及操作序對定義
2.使用建構程序定義
3.以限制式定義
