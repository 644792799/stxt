樹狀結構
========
樹(tree)
~~~~~~~~
樹可遞迴定義如下：

基本定義：

單一節點 r 為樹，其自身為根 root。


建構定義：

令 r 為單一節點，若有樹集合 ts={
t1, 
t2...
tn}，
對所有 t 屬於 ts 
建立一個邊連至 r 形成 r'，
則 r' 仍為樹。





r' 稱為 t 的父 parent，
而 t 稱為 r' 為子 child，
r 稱為樹 r' 的根。
{t1, 
t2...
tn}的根，稱為兄弟 silbling。


若 t 沒有子節點，稱 t 為葉 leaf。


由定義可知根為樹中沒有父的節點。

叉 degree

叉為一函數，若 n 為樹 t 之節點，
d(n) 定義為 n 的子節點數目。


序樹 ordered tree指樹的子節點具有一定的順序。


定義 d(t)=max(d(n)), n 屬於 t，
若 d(t)=m, m 為自然數，
稱 t 為m-叉樹。


若所有 n 屬於 m-叉樹 t，且 d(n)=0 or m，則 t 為
滿樹 full tree。


1-叉樹為一種退化成鏈結的樹，其每個節點最多只有一個子，
又稱為藤蔓 vine    


高 height

高為一函數，若 n 為樹 t 之節點，
h(n) 定義為由根 r 至 n 的路徑所連接的節點數。
由上可知 h(r)=1。


定義 h(t)=max(h(n)), n 屬於 t，稱 h 為 t 的樹高。


平衡樹    balanced tree
為每個葉子都等高的樹。


完全樹 complete tree
若 t 既是滿樹，也是平衡樹，則稱為完全樹。

陣列表示法

鏈結表示法

樹定理

以下的陳述相互邏輯等價

t 為無環且連通圖
t 任兩個點之間，存在唯一的路徑
t 為最大連通，且 v=e-1 這同義於若 e in t, 則 t-e 不連通。
t 為最小無環，且 v=e-1，這同義於若 e not in t, 則 t+e 為有環圖。
    




算式樹 expression tree
滿足問題 satisfication problem


決策樹 decision tree
八幣問題 eight coins problem


遊戲樹 game tree

樹的尋訪(travel tree)
~~~~~~~~~~~~~~~~~~~~~
尋訪是輸入一樹，
並傳回一序列包含所有的節點的函數。
簡單說就是把樹作線性排序。

一般說來尋訪包含三個步驟：輸出節點、訪問左子樹、訪問右子樹，
其中輸出節點通常為將節點值加入至結果序列中，
訪問左子樹為向左子樹移動，
訪問右子樹為向右子樹移動，
令 p 表輸出節點的步驟、l 表訪問左子樹、r 表訪問右子樹，
則有輸出的順序會有下面的組合：
t={plr,lpr,lrp,prl,rpl,rlp}

通常會先拜訪左子樹，再拜訪右子樹，
而命名是來自於輸出的序列與數學公式前序符號、
中序符號及後序符號字串一樣而來，
有下面三種：

table.
==== ========= === ====================
前序 preorder  plr 輸出節點在訪問子樹前
中序 inorder   lpr 輸出節點在訪問子樹中
後序 postorder lrp 輸出節點在訪問子樹後
==== ========= === ====================

若是調換左右子樹的訪問順序，則稱為
反序尋訪 reverse order，
列舉如下：
 
table.
====== ================= ===
反前序 reverse preorder  prl
反中序 reverse inorder   rpl
反後序 reverse postorder rlp
====== ================= ===

tree. 
        2
       / \
      7   5  
     / \   \
    2  6    9
      / \   /
     5  11  4
::

其尋訪序列為：
前序:2 7  2 6  5 11  5  9  4
中序:2 7  5 6 11  2  5  4  9 
後序:2 5 11 6  7  4  9  5  2     

與 dfs 的關係
~~~~~~~~~~~~~
dfs 先探訪離起點最遠的節點，在樹的情況中，
dfs 的實作不用額外記憶尋訪過的節點，
由 3.2.1 得知樹中每不同兩點間僅有唯一的路徑，
故不可能經由不同路徑探訪至探訪過的節點。
以上樹的尋訪均是 dfs 的特例，其中前序最接近一般的 dfs。

階層尋訪(level order)
~~~~~~~~~~~~~~~~~~~~~
二元樹的階層尋訪便為 bfs 的特例。

引線樹(threaded tree)
~~~~~~~~~~~~~~~~~~~~~
二元樹表示集合

二元樹表示樹及森林

用前序及中序序列建立唯一二元樹


二元搜尋樹
    二元搜尋樹是一二元樹，但左子節點值均小於節點值，右子
    節點值均大於節點值。
    *圖 3.2.3.a    
         7
               /  \
              3   10
          / \    \
        1   6   14
               / \  /
            4  7 13
    *利用中序尋訪將樹化為漸增序列    
    上圖為一二元搜尋樹，其 inorder traversal 為：
    1 3 4 6 7 7 10 13 14
    **反序利用反向中序尋訪    
    把節點轉為漸增序列，若用 reverse inorder 則轉為漸減數
    列。
    *搜尋    
    搜尋節點步驟為：
    比較節點值與鍵值，若鍵值小於節點值則往左子樹探訪，若
    大於則往右子樹探訪，若等於則傳回此節點。
    
    *再平衡    reblance    
    若加入或刪除節點，而改變了樹的結構，則必需用再平衡來
    使樹維持平衡。
    
    *平衡法則 balance rule    
    平衡法則是樹用來再平衡的判定及動作。常見的有 avl 樹及
    紅黑樹。

    
樹的調整
    *旋轉    rotation
    *圖3.2.4.a    
    
        |         |
        y    x
           / \     / \
          x   c&lt;=>a      y
         / \     / \
        a   b    b   c
    
    節點：大寫字母 x, y
    子樹：小寫字母 a, b, c
    旋轉定義如上圖，由左圖至右圖的轉變稱作右旋，其反向轉變稱
    作左旋。
    *旋轉會改變節點的高度，但不會改變其中序巡訪的順序    
    *旋轉僅會改變節點及其子樹的結構，不會更動到母樹    
    這些特性使旋轉成為二元樹用來調整平衡結構的標準動作




