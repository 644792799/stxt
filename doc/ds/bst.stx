二元搜尋樹(binary search tree)
------------------------------
二元搜尋樹是一二元樹，但左子節點值均小於節點值，
右子節點值均大於節點值。

diagram.binary search tree
    7
   / \
  3  10
 / \   \
1   6   14
   / \  /
  4  7 13
::

theorem.排序定理
  利用中序尋訪可將搜尋樹化為漸增序列。

上圖為一二元搜尋樹，其中序尋訪為：

1 3 4 6 7 7 10 13 14

theorem.反排序定理
  把節點轉為漸增序列，若反向中序尋訪用則轉為漸減數列。

搜尋    
~~~~
搜尋節點步驟為：
比較節點值與鍵值，若鍵值小於節點值則往左子樹探訪，
若大於則往右子樹探訪，若等於則傳回此節點。
    
再平衡(reblance)
~~~~~~~~~~~~~~~~
若加入或刪除節點，而改變了樹的結構，
則必需用再平衡來使樹維持平衡。
    
平衡法則(balance rule)
~~~~~~~~~~~~~~~~~~~~~~
平衡法則是樹用來再平衡的判定及動作。
常見的有 avl 樹及紅黑樹。
    
旋轉(rotation)
~~~~~~~~~~~~~~
diagram.rotation
    |       |
    Y       X
   / \     / \
  X   c<=>a   Y
 / \     / \
a   b   b   c
::
    
節點：大寫字母 x, y
子樹：小寫字母 a, b, c
旋轉定義如上圖，由左圖至右圖的轉變稱作右旋，
其反向轉變稱作左旋。

theorem.旋轉定理
  * 旋轉會改變節點的高度，但不會改變其中序巡訪的順序    
  * 旋轉僅會改變節點及其子樹的結構，不會更動到母樹    

  這些特性使旋轉成為二元樹用來調整平衡結構的標準動作
