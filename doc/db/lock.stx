鎖定並行控制
------------
在多使用者資料庫中，
一般都採取某些資料鎖定來解決並行處理中資料的一致性與完整性問題，
鎖定會延遲某些交易的動作以避免不一致性或運算結果喪失的情況發生。

鎖定並行控制的基本邏輯如下：
當一個交易欲存取某一個資料物件，必須具取得此資料物件的鎖定，
否則需等待至其它交易釋放其鎖定，才能進行存取動作，
此交易便被延遲了。

二元鎖定（Binary Locks）
~~~~~~~~
二元鎖定(Binary Locks)在鎖定資源時只有兩種狀態：
鎖定和非鎖定），這是一種互斥的鎖定方法，如同位元的0和1，
也就是說，資源在同一個時間只能有一個交易進行存取。

共享與互斥鎖定
~~~~~~~~~~~~~~
共享與互斥鎖定針對這兩種單元操作將鎖定也分為兩種，
如下所示：

共享鎖定（Shared Lock）：也稱為「讀取鎖定」（Read Lock），

互斥鎖定 
  互斥鎖定(Exclusive Lock)禁止相關資源共享。
  如果一交易以互斥鎖定方式封鎖某資源，
  則僅有該交易被允許更新該資源的資料，
  直到該交易釋放對該資源的鎖定。

  又稱為「寫入鎖定」(Write Lock)。

共享鎖定 
  共享鎖定(Share Lock)允許相關資源可以被共享，
  例如：
  當交易 A 提出 D 的共享鎖定後，
  如果有交易 B 提出 D 的共享鎖定請求，會同意其請求，
  如果是互斥鎖定請求則拒絕。

  又稱為「讀取鎖定」(Read Lock)。

一般而言，共享鎖定比互斥鎖定具有更高的資料並行性。
在多使用者資料庫系統使用鎖定法，
有時會產生死結(Dead Lock)，使得異動交易無法繼續。
當多個使用者彼此在等待對方鎖定的資料時，會發生死結。 

鎖定相容表
~~~~~~~~~~
鎖定方式間是否相容的情況，可由相容表表示，
如上述共享與互斥鎖定相容表如下：

table[compatible_table].鎖定相容表
  S X
= = =
S C
X
= = =

鎖定衝突
~~~~~~~~
鎖定方式間不相容表示鎖定衝突存在，
換句話說，兩個交易產生鎖定的「衝突」條件，如下所示：
#.兩個交易同時鎖定相同資料。
#.其中有一個鎖定是互斥鎖定。

寫寫衝突(WW-conflict)
  兩個交易都是寫入操作。
讀寫衝突(RW-conflict)
  兩個交易一個讀取，一個寫入。

鎖定粒度
~~~~~~~~
資料鎖定的範圍稱為「鎖定粒度」(Lock Granularity)，
各家資料庫管理系統的作法並不相同，
有的是以一筆一筆記錄為單位的「列範圍」(Rows)，
有的是以多筆記錄為單位的「頁範圍」(Pages)來鎖定資料。
