並行控制
========
<d:\stxt\doc\db\transaction.stx>
並行引發的問題
--------------
但並行系統若沒有適當控制會引發下述的問題：

遺失更新
~~~~~~~~
table[lost_update].交易 A 於 t4 遺失一筆更新
  交易A     時間   交易B
=========== ==== ===========
A.read(p)    t1   
             t2  B.read(p)   
A.update(p)  t3  
             t4  B.update(p)
=========== ==== ===========

B 於 t4 異動 p 時，沒看到 A 於 t3 的更新，
所以 A 於 t4 遺失一筆更新。

髒讀取
~~~~~~
髒讀取(Dirty Read)指的是交易讀到的值，
先前被另一個交易異動了，但是另一個交易後來失敗，
便把異動的值還原，等於交易讀到一個暫時的值。
又稱為未提交相依(Uncommited dependence)。

table[dirty_read].交易 A 的髒讀取
  交易A     時間   交易B
=========== ==== ===========
             t1  B.update(p)
A.read(p)    t2  
             t3  B.rollback
=========== ==== ===========

不可重覆讀取
~~~~~~~~~~~~
當一個交易完成前讀取同一資料兩次，卻得到不同的值，
稱為不可重覆讀取(Unrepeatable read)。

table[unrepeat_read].交易 A 發生不可重覆讀取
  交易A     時間   交易B
=========== ==== ===============
A.read(p)    t1  
p = 20
----------- ---- ---------------
             t2  B.update(p, 30)
----------- ---- ---------------
A.read(p)    t3  
p = 30
=========== ==== ===============

如[unrepeat_read]_ 所示，A 在完成前，讀取 p 兩次，
卻在 t1 讀到 p 為 20，在 t3 讀到 p 為 30，
產生了不可重覆讀取問題。

幻影
~~~~
幻影(phantom)指稱當一個交易 A 選取符合某種條件的列，
另一個交易 B 插入符合此條件的列，則交易 A 再讀取一次時，
會多讀到 B 所插入的新列，兩次同樣條件的選取卻產生不同的集合。

錯誤加總
~~~~~~~~
若有上述的問題，則會產生錯誤加總(incorrect summary)問題。

table[incorrect_sum].交易 A 發生不可重覆讀取
  帳戶p1  帳戶p2      帳戶p3
========= ====== ================
       40     50               30
--------- ------ ----------------
  交易A    時間       交易B
========= ====== ================
A.sum(p1)   t1  
sum = 40
--------- ------ ----------------
A.sum(p2)   t2  
sum = 90
--------- ------ ----------------
            t3   B.update(p3, 20)
--------- ------ ----------------
            t4   B.commit
--------- ------ ----------------
A.sum(p)    t5  
p = 110
not 120
========= ====== ================
<d:\stxt\doc\db\timestamp.stx>
<d:\stxt\doc\db\lock.stx>
