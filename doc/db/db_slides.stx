關聯式模型
==========
永遠無法說出一張圖
------------------
image[DSCF1252.jpg].妳是否可以讓一個沒看過此圖的人，用說的讓她畫的一模一樣

語言的限制
----------
# 一張圖勝千言萬語
# 再多的語言也不能讓別人看到你所看到的影像
# 真實世界是無限複雜
# 可以用人類語言討論(理解)的東西是有限的

古人早就發現這個現象
--------------------
老子：
  道可道、非常道，名可名、非常名

莊子：
  吾生也有涯，而知也無涯，以有涯隨無涯，殆已

金剛經：
  「如來所說三千大千世界，即非世界，是名世界。」

  「如來說世界，非世界；是名世界。」

  「說法者，無法可說：是名說法。」

  「所言善法者，如來說即非善法，是名善法。」

  「如來說諸心皆為非心，是名為心。」

  「佛說般若波羅蜜，即非般若波羅蜜，是名般若波羅蜜。」

那麼怎樣談論問題
----------------
什麼東西可以幫助我們討論問題?

為什麼要有模型?
---------------
為了理解及討論我們的問題，
必須簡化真實世界成為模型。

地圖
----
image[map.jpg].地圖

航照圖
------
image[pic.jpg].航照圖

為什麼要有模型(續)?
-------------------
你認為航照圖會好找路嗎？

模型是什麼?
-----------
# 一組有限的符號(字)
# 一組有限的符號操作(文法)
# 能表達特定領域的問題
# 真實世界的簡化

四則運算
--------
符號={數字, +, -, *, /} 

文法1=數字 運算子 數字

1 + 3

文法2=除法不可以除以 0 的限制

1/0 不合法

為什麼要有文法 2 來增加文法 1 的複雜度?
模型不是越簡單越好？

模型必須反映真實世界
--------------------
答：因為真實世界沒有除以 0 的事物

模型必須建立在反映真實世界的基礎上。

能反映真實世界的模型稱為「正確」(soundness)模型

呼應真實世界是無限複雜
----------------------
存在「正確」(soundness)模型，
但不存在「完全」(completeness)模型

沒有能完全表達真實世界的模型

歌德爾(Gödel)不完全定理(1931)

所以電腦及虛擬實境只能有限度地表達這個世界

圖靈(Turing)[邱奇(Church)]定理(1936)

圖靈於發明電腦時，就發現電腦的侷限

與古人不同，上述的人用數學證明語言的限制

介面
----
介面可視為模型

合約可視為介面

若兩家廠商能提供合約所定義的服務，
則這兩家廠商可以互換。

身為金主只要知道合約所定義的服務，
不需要知道廠商如何達成這個服務。 

汽車的控制介面
--------------
汽車的控制介面主要有三個元素：

# 方向盤
# 煞車踏板
# 加速踏板

對駕駛而言，只要懂上面三個元素及其操作，
就可以利用汽車到想去的地方。

駕駛不需要知道轉動方向盤時，
汽車的機械裝置怎麼轉動車輪。

模型的層次
----------
若甲模型可以模擬出另一個乙模型，
則甲稱為乙的實作，或甲具有乙介面。

若甲乙都模擬丙，
丁的實作是丙，
甲乙互換不會影響上層模型丁。

底層模型為上層模型隱藏細節，
簡化其上層模型的定義。

資料庫的模型層次
----------------
根據不同的應用需求，
資料庫模型通常分成三種模型，或三種介面

外部層
  此層模型要能滿足使用者執行業務上所必要的功能，
  通常指整個系統。

概念層
  此層模型必須提供一組有限的元素、操作及完整性，
  讓資料庫管理師能簡便的查詢、插入、更新及定義資料庫儲存的資料，
  目前此層最主流的模型是關連式模型，
  通常以表呈現給使用者看。

內部層
  主要負責將資料永久的保存在硬體上，
  此層模型要能處理下列問題

  那些資料需要加上索引，增進擷取效率。

  要採用何種內部儲存技術：B+-Tree 或雜湊式的儲存方式？

  在磁碟上如何將資料叢聚在一起。

  不考慮與裝置有關的存取細節，如：
  磁碟機有幾軌，大小為何，如何劃分

關聯式模型
----------
關聯式模型包含三個主要項目：
# 物件
# 完整性
# 運算子

四則運算的比喻
--------------
table.關聯式模型 vs. 四則運算
關聯式模型 四則運算
========== =======================
物件       數字
運算子     加減乘除
完整性     除法不可以除以 0 的限制
========== =======================

值
--
是關聯式模型表達真實世界的最小描述單位，
如同英文表達世界的最小單位是單字。

值必須滿足一種完整性，就是第一標準式，
限制表格所有的值必須為單元值，不可是複合值。

單元值意指無法把它分解成其它值。

知識管理系統
------------
如本局知識管理系統，其中科室資料由下表表示：

table.department
id name   boss   member
== ====== ====== ======================
 1 資訊科 廖xxxx 陳xxxx, 郭xxxx, 金xxxx
 2 行政科 吳xxxx 賴xxxx, 賴xx君, 洪xxxx
== ====== ====== ======================

欄 id, name, boss 都為單元值，
但表示科室成員的 member 欄中不是單元值，
像是資訊室的'陳xxxx, 郭xxxx, 李xxxx'為以 ',' 為分隔字元，
可以再分解成'陳xxxx', '郭xxxx', '李xxxx'三個值，
這就不是單元值。

由於關聯式模型最小操作單位是表，
所以無法以此模型(SQL)來操作複合值，
必須用其它語言來操作。

當郭xxxx退休時，要用什麼操作表示呢？
若是上表必須用 update 指令來將 member 的字串改成無 '郭xxxx' 的字串，
而無法以 SQL 的 delete 指令表示'郭xxxx'退休的事實。

第一正規化
----------
table.employee
id dep_id name
== ====== ======
 1      1 廖xxxx 
 2      1 陳xxxx 
 3      1 郭xxxx
 4      1 金xxxx
 5      2 吳xxxx 
 6      2 賴xxxx 
 7      2 賴xx君 
 8      2 洪xxxx
== ====== ======
若加上一個 employee 表來描述員工，
用外鍵 dep_id 表示科室成員的關係，
就可以下述 SQL 

delete from employee where name = '郭xxxxx'

表示'郭xxxx'退休的事實。

型態
----
型態為一群值的集合，
類似程式語言中的資料型態，
可用來定義了表的某個欄所允許的可能值，

相同型態的物件必需要可以比較。

表
--
資料庫中儲存資料及操作資料的基本元素為表，
它又由下列元素所組成。

table[human].human
id name   sex birthday
== ====== === ========
 1 陳水扁   M 19501012  
 2 施明德   M 19410115
 3 呂秀蓮   F 19440606
 4 周美青   F 19521130
== ====== === ========

欄
--
欄(column)具有兩個屬性，欄名及型態，

欄名用來指示系統存取列的某一部份。

型態如前所述，用來限制欄的可能值。

列
--
列(row)代表一筆紀錄，而欄代表紀錄的一部份，
列由(欄:值)對所組成，

例如 human 第一列可寫成如下：

(id:1, name:陳水扁, sex:M, birthday:19501012)

表可視為一組列的集合，如[human] 有 4 列。

欄集
----
表具有欄集，用來定義每一列可分成幾個部份，
即每部份的值的類型，故欄集又稱為表綱要(Schema)，
用來限制表如何組成。

表特性
------
表具有以下的特性：
# 第一標準式：值必須是單元，無法再分割成其它單元值。
# 型態完整性：同一欄的值要有相同的類型。
# 表不可有重複欄名。
# 欄在表中的次序沒有特定的意義。
# 列在表中的次序沒有特定的意義。
# 表不可以有重複列

習題
----
# 請找出自已系統主檔的主鍵、外鍵？

巢狀 SQL
========

表間的關係
============

摘要資料
========
樞紐分析表
----------

視覺化查詢語言
==============
Query By Example
----------------

Access QBE
----------

