關連式代數
----------
E.F.Codd 對於關連式代數最原始的定義中包含了八個運算，
分為兩組，集合運算子及特殊運算子。

表式運算子至少接受一個表運算元，
且運算結果均為一個表，
表式表式運算子是封閉的，
所以幾個運算子可以組成套疊公式，
以基礎運算比擬，加法、減法及乘法在整數下是封閉的，
使得運算元及結果都為整數，所以可組成套疊公式。

code.文法
expr        := monadic | dyadic
monadic     := renaming| restriction | projection
renaming    := term RENAME col as col
term        := table | (expr)
restriction := term WHERE codition
projection  := term | term[c1,c2,...]
dyadic      := projection dop expr
dop         := UNION | INTERSECT | MINUS | TIMES | JOIN | DIVEDBY
::

集合運算子
~~~~~~~~~~
集合運算子都為二元運算子，
接受二個表型態的運算元，並傳回一個結果表。

積 
~~
運算以集合論中所定義的「卡式積」，
將兩個表組合成一個表，
這個是理論基礎上的運算子，在實務上是避免這種使用方式的。

聯集
~~~~
聯集

差集
~~~~
此運算以集合論中所定義的差集運算，
從一個表中刪除另一個表中有的資料。

特殊運算子
~~~~~~~~~~
特殊運算子

<d:\stxt\doc\db\restriction.stx>
<d:\stxt\doc\db\projection.stx>
<d:\stxt\doc\db\divideby.stx>

外部合併
~~~~~~~~
外部合併是作用在兩個表上的運算子，
其將表分成主表及副表，
原本相等合併除去所有不滿足合併條件的紀錄，
而外部合併則保留主表的所有紀錄，
若沒有副表的紀錄則副表的欄設為 NULL 值。
左外部合併運算子其左方表的是主表，
右方表為副表；
右外部合併運算子其右方表的是主表，
左方表為副表。

原始運算子
~~~~~~~~~~
原始運算子無法以其他的運算子來定義，
而非原始運算子可由原始運算子上述推演出來。
原始運算子包含：
* UNION
* MINUS
* TIMES
* PROJECT
* RESTRICT

非原始運算子包含：
* INTERSECT
* JOIN
* DIVIDEBY

「原始運算子」這些運算子無法以其他的運算子來定義。

table.[rel_alge_vs_rel_calc].關連式代數與關連式計算的比較
關連式代數                 關連式計算 
========================== ==========================
為一交易式的查詢語言。     為一非交易式查詢語言。 
-------------------------- --------------------------
必須明白地指出運算的順序。 不須明白地指出運算的順序。 
-------------------------- --------------------------
必須提供基本運算。         不須提供基本運算。 
-------------------------- --------------------------
以集合的基本運算與         以集合表示法與謂詞計算
表式運子為基礎。           為基礎。 
-------------------------- --------------------------
表示能力與關連式計算相等， 表示能力與關連式代數相等，
而且每一個關連式代數的     而且每一個關連式計算的查詢
查詢皆可轉成相對的         皆可轉成相對的
關連式計算查詢。           關連式代數查詢。 
-------------------------- --------------------------
可直接實現，並可作為       通常是以轉成
查詢最佳化時的             關連式代數來實現。
樹狀結構中間型式。 
========================== ==========================
