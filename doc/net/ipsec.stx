IPsec(ipsec)
------------
0980323

IP Security(IPsec)是針對位於網路層的Internet Protocol所提出的安全性協定。
IP中加入安全性協定的最大好處在於確保所有網路通訊的安全。
也就是說，即使位於IP層上層的應用程式或傳輸層沒有提供任何安全性的機制，
由於IP層加入了安全機制，因此可保護整個網路通訊的內容。

IPsec 主要可提供兩種功能：

認證功能(Authentication)
  所謂認證，是指確認通訊雙方的身份，
  以及確保雙方之間傳輸的資料未受他人破壞或竄改。

保密功能(Confidentiality)
  保密則是將通訊內容予以加密，防止網路上的第三者讀取通訊內容。

認證與保密的核心都是加密法(或是雜湊函數)，
提到加密法當然就會牽涉到金鑰管理(Key Management)。
因此，IPsec 也規定了如何交換金鑰，以便建立與管理加密時所需的各類金鑰。 
根據1997年CERT(一個專門研究網路安全的機構)的報告指出，
最常見的網路攻擊主要有兩種類型：

#.修改IP封包，以假造的IP位址來扮演其他使用者。
#.從網路上竊取IP封包，讀取通訊內容。

有鑑於此，
IAB(Internet Architecture Board)決定在下一代的IP協定中(也就是IPv6)，
加入認證與保密的功能，這些相關功能即統稱為IPsec 。
IPsec 在設計時即考慮到必須與現有IPv4相容。
因此相關的開發廠商也可將IPsec 移植到現有的IPv4，
例如Windows 2000、Windows XP、
Windows Server 2003等作業系統便都支援IPsec 。

IPsec 的應用 
~~~~~~~~~~~~
IPsec 的主要用途即是建立安全的通訊管道。IPsec 的應用可分為兩類：

建立區域網路內部的安全通訊:
  在這種模式下，雙方的個人電腦都必須具備IPsec 的能力。
  這類應用主要是為了防範區域網路內的駭客。
  例如，將總經理與財務經理之間的全部傳輸內容予以加密，
  避免員工看到機密的財務資訊。

區域網路之間透過網際網路安全地傳輸資料:
  在這種模式下，區域網路對外的路由器或防火牆必需要具備IPsec 的能力，
  至於區域網路內的個人電腦使用一般的IP即可。
  此種模式可建立 VPN，讓區域網路不必再架設昂貴的專線，
  而是透過網際網路來建立虛擬專線，以便在區域網路之間安全地傳輸資訊。
  例如，位於外地的分公司，可透過網際網路與總公司建立安全的通訊管道。

IPsec 的優點
~~~~~~~~~~~~
與目前TCP層或應用層的安全性解決方案相比，IPsec 大致有以下的優勢：

#.由於IPsec 位於較低的網路層，所以不會牽動上層的TCP層或應用層。
  因此，不僅使用者完全不受影響，甚至連程式設計師或開發廠商，
  都不用針對IPsec 作任何特殊的變更。

#.當IPsec 應用在路由器或防火牆時，可確保所有的區域網路對外的通訊安全，
  但區域網路內仍可使用傳輸效率較佳的IP協定。

#.IPsec 可套用在個別的使用者或電腦上，提供較大的管理彈性。

#.目前網際網路的路由協定，
  主要是藉由路由器之間彼此交換路由資訊而建立整個路由架構。
  因此之故，網路駭客可藉由不實的路由資訊來破壞路由的路徑，
  將他人的機密資訊導入所要的位置。

  由於IPsec 可確保路由器之間的通訊安全，
  也因此可加強路由架構的安全性。

IPsec 的架構
~~~~~~~~~~~~
我們可以從運作方式、封包結構、使用模式以及使用的協定這四方面來了解I
Psec 的架構。

IPsec 的運作方式
~~~~~~~~~~~~~~~~
IPsec 的運作需先經過以下步驟：

#.在初始化時，雙方必須建立安全聯結(Security Associations)。
  這個步驟的主要目的是讓雙方對於如何使用IPsec 的方式達成共識，
  例如，選擇何種安全功能；決定加密的演算法；使用金鑰的原則等等。

#.金鑰交換。這個步驟主要是利用非對稱加密法，
  讓雙方各自擁有相同的秘鑰(Secret Key，專指對稱式加密法所用的金鑰)。

#.開始以安全的管道來傳輸資訊。

IPsec 的封包結構
~~~~~~~~~~~~~~~~
IPsec 到底是以何種方法來提供上述的安全功能呢？
除了對封包執行加密或認證演算外，
IPsec 還會在傳統的IP封包中加入額外的IPSec表頭，
用來記錄加密或認證的相關資訊。
下圖的封包欄位配置會因使用的模式而有所不同，稍後我會再詳細說明這些欄位。

code.IPsec 表頭的位置	
IP 表頭 IPsec 表頭 TCP 表頭 Data
::

IPsec 的使用模式
~~~~~~~~~~~~~~~~
IPsec 提供了兩種使用模式：

傳輸模式(Transport mode):
  僅加密或認證上層協定的資料。例如，
  在區域網路中有兩台電腦A與B，A與B可直接建立連線(不必經由路由器或防火牆)，
  且A與B具有處理IPsec 封包的能力時，則可使用IPsec 的傳輸模式。

通道模式(Tunnel mode):
  IPsec 會加密或認證整個封包，然後在最外面再加上一個新的IP表頭。
  當IPsec 連線兩端的電腦有一端或兩端不具處理IPSec封包能力，
  而必須透過具有IPsec 能力的路由器或防火牆來代為處理IPSec封包時，
  即必須使用通道模式。

IPsec 的協定
~~~~~~~~~~~~
若從功能面來看，IPsec 包含了三種協定，分別提供不同的功能。

金鑰交換協定:
  負責建立安全聯結與交換金鑰。

認證表頭 (Authentication Header，AH):
  主要提供認證的功能。

資料封裝加密 (Encapsulating Security Payload，ESP):
  主要提供加密的功能，也可選擇性地再加上認證的功能。

建立IPsec 連線使一定會使用金鑰交換協定。
至於AH與ESP則是二選一，或是兩者合併使用。

金鑰交換協定
~~~~~~~~~~~~
金鑰交換協定主要負責這兩項工作：

#.建立安全聯結。
#.建立共同的秘鑰。

IPsec 目前預設的金鑰交換協定為
ISAKMP(Internet Security Association and Key Management Protocol)與Oakley。
Oakley僅規定金鑰交換的方法，至於各種訊息詳細的格式則是由ISAKMP所定義。
ISAKMP同時也規定了安全聯結的建立步驟。
ISAKMP/Oakley協定相當複雜，因此本文僅大略介紹其原理與功能。

安全聯結
~~~~~~~~
IPsec 在制訂時，即考慮到相容性與彈性的問題。
例如，IPsec 必須能跨越各種平台；IPSec必須能在Ipv4或Ipv6上使用；
開發廠商能夠按照需求來移植各種等級的加密演算法。
也就是說，IPsec 的協定只提供一個基本的架構，在這個架構之下，
各軟硬體廠商再加入適合的演算法或標準等等。

因此 IPsec 協定中包含了許多參數。
當網路上兩個主體(電腦或是路由器)要使用IPsec 來傳輸資料時，
雙方勢必要先相互溝通，對相關參數達成一致的共識，之後才能建立安全的傳輸管道。

所謂安全聯結，就是這樣的一組參數。換言之，安全聯結是由許多參數所組成。
在此請讀者注意，安全聯結只是一個抽象性的觀念，
組成安全聯結的參數並非全部都是封包中實際的的欄位。

安全聯結具有單向的特質，也就是說當A傳送資料給B時需要定義一項安全聯結，
而B傳送資料給A時需要另外一組安全聯結。

安全聯結中有三個最重要的參數，三者合起來可共同定義(或識別)安全聯結：

SPI, Security Parameters Index(安全係數索引):
  SPI是由IPsec 接收端在自行定義的數值，長度為32位元，會記載於每個IPsec 封包中。
  例如，A、B、C同時要以IPsec 傳送資料給X，
  則X會定義三個SPI值，之後便可利用IPsec 封包中的SPI欄位，
  辨識該封包隸屬哪個安全聯結。

Security Protocol ID(安全協定ID):
  指定要使用AH或是ESP表頭。
  每項安全聯結僅能在AH或ESP中擇其一，不能同時指定這兩者。
  因此，若要同時使用AH與ESP來傳輸資料時，則必須用到兩項安全聯結；
  若要同時使用AH與ESP建立雙向傳輸關係，則需要四項安全聯結。

IP destination address(IP目的位址):
  安全聯結的單方關係是以接收端的IP位址來定義。

建立安全聯結
~~~~~~~~~~~~
ISAKMP詳細定義了如何建立、協調、修改，以及刪除安全聯結。具有IPsec 能力的系統，
通常會保有一份安全性清單，詳列系統所支援的安全聯結(例如，支援何種演算法等等)，
以及使用的優先順序。IPsec 連線的兩端在建立安全聯結時，會依據ISAKMP的格式，
從各自最高優先順序的安全聯結開始協調，直到建立雙方皆支援的安全聯結。

如前文所述，利用IPsec 來互傳資料時，通常需要建立多項安全聯結。
此外，安全聯結建好後，也不是就此一路到底使用同樣的安全聯結。
由於金鑰安全的機制，每隔一段時間即必須重新建立安全聯結。
所有這些工作都由ISAKMP所定義。

金鑰交換的原理
~~~~~~~~~~~~~~
金鑰交換協定向來是加密法中最複雜的部份。
IPsec 金鑰交換協定首先利用非對稱式加密法來建立安全連線，
然後再利用對稱式加密法來加密(或認證)傳輸的資料。
以下簡單地說明非對稱式加密法的架構：

假設使用者A希望利用非對稱式加密法，讓別人能夠以安全的方式傳送資料給他。
使用者A首先必須建立一對金鑰，
也就是一把公鑰(Publick Key)與一把私鑰(Private Key)。
公鑰只能拿來作加密的用途，因此可隨意散發，不會有安全的顧慮。
私鑰可拿來解密，因此由使用者A自行保留，不可給其他人。
其他人若要以安全的方式傳送資料給使用者A，只要取得使用者A的公鑰，
將資料加密後再送回給使用者A。由於只有使用者A擁有私鑰，
因此只有使用者A才能解密。請讀者注意，上述的關係基本上是單方的性質，
因此若雙方要互傳資料，雙方必須各自擁有對的公鑰。

在實作上，非對稱式加密法也具有數位簽名。
不過在IPsec 中，不會用到這樣子的架構。

與對稱式加密法相比，
非對稱式加密法最大的優點在於雙方毋須先共享金鑰即可建立安全連線，
因此非常適合應用在網際網路。不過，非對稱式加密法有一個最大的缺點，
就是其演算法極為繁複，因此會耗費大量的電腦資源。
為了解決這個問題，
非對稱式加密法通常會結合對稱式加密法(運算較快、較不耗費資源)一起使用。
在實作上，目前有許多種模式。

Diffie-Hellman金鑰交換法
~~~~~~~~~~~~~~~~~~~~~~~~
以下說明IPsec 所使用的Diffie-Hellman金鑰交換法
(Diffie與Hellman這兩位也是最早提出非對稱式加密法的前輩)：

#.雙方先以非對稱式加密法來交換彼此的公鑰(Ka-pub與Kb-pub)。
#.再以對方的公鑰與自己的私鑰，運算求得一把共同的秘鑰(Ka-b)。
#.利用秘鑰以對稱式加密法，來進行加密或認證的動作。

在後續的加密過程中，若反覆使用同一把秘鑰，比較容易被人破解。
為了提高加密安全性，秘鑰每隔一段時間便會重新建立，
這種秘鑰就稱為階段金鑰或工作金鑰(Session Key)。
這也是為什麼安全聯結必須定期重新協調的主要原因。

IPsec 預設使用的金鑰交換協定為Oakley。
Oakley可視為是Diffie-Hellman金鑰交換法的加強版，
原理相同但提供較高的安全性。
IPsec(Internet Protocol Security)為以 IP 封包為單位加密信息方式，
來對傳輸途中的封包加密及防止篡改的一種協訂。

認證表頭
~~~~~~~~
認證表頭(Authentication Header，AH)可提供封包認證的功能。
封包認證有兩層涵意：

#.確保IP封包的完整性，保證封包在傳送途中未曾遭篡改。
#.來源可靠性，確認IP封包發送者的身份。
#.請注意，封包認證並無法防止網路上的第三者窺伺封包內容。
  若不想讓其他人讀取封包內容，必須使用ESP封包加密的機制。

#.保護不受重送攻擊。

AH表頭欄位
~~~~~~~~~~
AH表頭實際上包含了以下幾個欄位：

Next Header(8個位元):
  記載後續表頭的類型。

Payload Length(8個位元):
  記載Authentication Data欄位的長度，單位為32位元Word)，再減去2。

Reserved(16個位元):
  保留將來之用（目前都置為0）。

Security Parameters Index(32個位元):
  用來識別安全聯結。
  與IP地址一同用來標識安全參數。

Sequence Number(32個位元):
  IP封包序號，可用來防止重送攻擊。
  單調遞增的數值，用來防止重放攻擊。

Authentication Data(長度不定):
  儲存IP封包的ICV或MAC。

演算法
~~~~~~
AH支援HMAC-MD5-96與HMAC-SHA-1-9這兩種HMAC演算法。

HMAC可視為雜湊函數與對稱式加密法的結合。
雜湊函數與對稱式加密法都可用來認證資料。
雜湊函數運算速度較快，但較不安全；
對稱式加密法運算較速度較慢(相對於雜湊函數)，但較為安全。
HMAC則兼具了雜湊函數與對稱式加密法的優點，不僅運算速度較快，
且安全性也很高。

此外，HMAC不受美國輸出法令的限制，因此可以廣泛地在全球使用。

HMAC所產生的值叫做MAC(Message Authentication Code)或
ICV(Integrity Check Value)，其實與雜湊函數所產生的雜湊值意義相近，
只是HMAC的演算法更加安全。

認證步驟
~~~~~~~~
使用AH認證功能的步驟大致如下：

#.傳送端與接收端首先經由金鑰交換協定，讓雙方各自有一把相同的工作金鑰(Ks)。
#.傳送端利用Ks計算封包資料的ICV，然後將ICV附在封包內的AH表頭中，一起送給接收端。
#.接收端利用Ks計算封包資料的ICV，然後與傳送端附在封包內的ICV相互比對。
  若兩者不同，代表這個封包有問題。若兩者相同，即完成封包確認的動作。

傳輸模式與通道模式
~~~~~~~~~~~~~~~~~~
AH協定支援傳輸模式和通道模式。傳輸模式又稱為點對點(End-to-end)模式。
使用此模式時，傳送端與接收端都必須移植IPsec 功能。
若要建立區域網路內兩台電腦的IPsec 連線，即可使用傳輸模式。

傳輸模式:
  使用傳輸模式時，原來的IP封包的格式大致不變，
  僅在原有的IP表頭與TCP表頭之間加上AH表頭。
  然後針對整個封包計算ICV，再將ICV記錄到AH表頭中。

  HMAC在計算時並非包含封包中的每個欄位。
  實際上，IP封包內有些欄位在封包傳送過程中會不斷改變，

  例如，IP封包每經過一台路由器，TTL欄位值即會減少1。
  因此，HMAC在計算時，會排除這些變動欄位。
  同理，使用ESP協定加密封包時，也會排除這些變動欄位。

通道模式:
  通道模式又稱為中介(End-to-intermediate)模式。
  使用此模式時，傳送端與接收端有一方未移植IPsec 功能，
  而必須透過其他裝置來處理。
  例如，傳送端具有IPsec 功能，接收端本身沒有IPSec功能，
  但接收端所在的區域網路路由器有IPsec 功能，如此即適合使用通道模式。

使用通道模式時，會在原來的IP表頭前加上新的IP表頭與AH表頭。
然後針對整個封包計算ICV，再將ICV記錄到AH表頭中。

防止重送攻擊
~~~~~~~~~~~~
不論AH或ESP都提供防止重送攻擊的功能，運作的方式與原理皆同。

所謂重送攻擊(Replayed Attack)是指第三者從網路中截取認證訊息，
並再稍後原封不動地將訊息送出，以假扮該訊息的原始送出者。
重送攻擊並非屬於密碼學/密碼破解的範疇，
因此認證協定必須使用額外的資訊來加以防範。

相對於連接導向傳輸(connection-oriented)的TCP協定，
IP屬於非連接導向傳輸(connectionless)的協定，在封包傳送過程中，
不會確認每一個封包是否完整送達目的地，即使接收一方沒收到某個IP封包，
也不會要求傳送一方重送封包。因此，傳統的IP封包特別容易遭受重送攻擊。
有鑑於此，IPsec 利用序號(Sequence Number)欄位，將每個封包加以編號，
以防止重送攻擊。

假設現在A要使用IPsec 認證表頭來傳送資料給B。當A、B之間的安全聯結決定後，
以該安全聯結所送出的封包會從0開始逐一按順序編號，
這些編號會記錄在序號欄位中。
序號欄位的長度為32個位元，因此，當編號超過2**32-1時，
A、B之間必須重新協調新的安全聯結，使序號欄位再從0開始編起。

至於在B端則必須設有封包接受範圍(window size)的機制。
封包接受範圍是一個固定的常數，預設值為64。
這個機制的主要原理就是接收一方必須記錄所收到IPsec 封包的編號，
並據以檢查封包是否有問題。封包接受範圍會隨著新收到的封包而往前移。
例如，B目前所收到封包的最大編號為N，則B會記錄編號N至編號N-63封包的接收狀態：

如果收到的封包位於接受範圍內(例如，編號為N-2的封包)，經過認證無誤後則加以記錄。

如果收到的封包位於接受範圍的左側，
或是在接受範圍內但與先前已收到的封包編號重覆，則丟棄該封包，並記錄此事件。

如果收到的封包位於接受範圍的右側，經過認證無誤後，
將接受範圍的右端往右移至新收到封包的位置，並記錄該封包。

藉由上述機制，接收端可控管所有收到的IPsec 封包，有效防止重送攻擊。

資料封裝加密
~~~~~~~~~~~~
資料封裝加密(Encapsulating Security Payload，ESP)可提供來源可靠性、
完整性、封包加密的功能，
也可選擇性地再加上認證的功能。

與AH不同的是，IP標頭不被包括在內。

ESP表頭欄位
~~~~~~~~~~~
ESP表頭中主要包含下列欄位：

Security Parameters Index:
  用來識別安全聯結。

Sequence Number(32個位元):
  IP封包序號，可用來防止重送攻擊。

Payload Data(長度不定):
  指封包所負載的資料，內容包括上層協定的表頭，以及實際要傳送的資料。

Padding(0至255 bytes):
  這個欄位必須特殊，目的是為了將Payload Data補足一定的長度，
  以符合加密法對區塊的要求。

Pad Length(8個位元):
  用來記載padding的長度。

Next Header(8個位元):
  記載後續表頭的類型。

Authentication Data(長度不定):
  用來記載ICV。

演算法
~~~~~~
ESP支援CBC(Cipher Block Chaining)模式的DES加密演算法。

DES(Data Encryption Standard)是由IBM研發的加密方法，
在1977年經美國官方採用而成為加密標準。
標準版的DES使用64位元的區塊加密(Block Cipher)與56位元的秘鑰，
在當時可說是相當安全的加密法。
不過，近年來隨著電腦硬體運算能力的快速進步，
加上破解密碼的技術也日新月異，DES已經稱不上是很安全的演算法了。

DES日後衍生出許多版本，後來的版本加密能力都遠勝過DES。
以下列舉幾種ESP所支援的加密法：

#.Three-key triple DES
#.RC5
#.IDEA
#.Three-key triple IDEA
#.CAST
#.Blowfish

ESP使用的加密步驟倒是沒有什麼特別之處，就是在傳送端進行加密，在接收端進行解密。

傳輸模式與通道模式
~~~~~~~~~~~~~~~~~~
ESP與AH相同，支援傳輸與通道兩種使用模式，使用的時機也類似。

除此之外，ESP防止重送攻擊的功能與AH完全相同。

ESP的認證功能
~~~~~~~~~~~~~
ESP可選擇性地加上認證功能。使用時，ESP會先加密封包，再計算封包的ICV，
然後在封包最後面加上一個認證欄位，用來儲存ICV。
也就是說，ICV不在加密範圍內。接收端收到封包後，先進行比對ICV值，
確認無誤後再將封包解密。

設定IPsec 的選項
~~~~~~~~~~~~~~~~
IPsec 相關設定在Windows是由群組原則(Group Policy)來負責，以方便管理員集中管理。
換言之，管理員可從Windows網域控制站(Domain Controller)上，
控制所有電腦的IPsec 設定。

群組原則可套用在整個網路區段(Site)、網域、組織單位，也可直接套用在個別的電腦。
因此，管理員可依實際需要，根據群組原則的套用規則來決定如何套用IPsec 。

如何規劃IPsec
~~~~~~~~~~~~~
管理員在規劃網域內的IPsec 設定時，可遵循以下步驟：

#.評估區域網路內資料傳輸的安全類型，例如，完全不需要安全保護、
  需要中等程度的安全保護等等。

#.根據這些安全類型來建立安全性原則。

#.將安全性原則套用至現有的群組原則上，或是直接套用在指定的電腦上。

#.建立IP安全性原則
  IP安全性原則（IP Security Policy）有點類似範本。
  管理員歸納出所需的安全類型後，即可建立對應的IP安全性原則，
  然後再將這些原則套用至合適的對象。IP安全性原則最好不要太多，
  以免造成管理工作過度複雜。

  在每項IP安全性原則中，可包含多項的安全性規則(Security Rule)。
  安全性規則定義了IPsec 的相關參數。以下為安全性規則的設定項目：

#.IP篩選器清單(IP Filter Lists)：
  篩選器清單中列出了IP安全性原則中所有的篩選器。
  篩選器主要是用來定義IPsec 的來源與目的位址，
  以及IPSec所要涵蓋的上層通訊協定。

#.篩選器動作(Filter Actions)：
  篩選器動作定義封包處理的方式。

#.安全性方法(IPsec  Security Methods)：
  安全性方法定義了IPsec 的安全設定，例如，指定使用AH或ESP協定、
  指定演算法等等。使用時，通常會定義多種安全性方法，
  比較容易與對方達成協議並建立IPsec 連線。
  管理員可自訂安全性方法，也可使用內建的兩種安全性方法：

  #.高(High)：使用ESP協定。
  #.中(Medium)：使用AH協定。
  #.自訂(Custom)：若要同時使用AH或ESP，可在此自訂安全性方法。

  此外，也可選擇認證與加密所使用的演算法，以及工作金鑰的建立原則。

#.驗證方法(IPsec  Authentication)：
  有三種在建立IPsec 連線時確認對方身份的驗證方式，
  使用IPsec 的雙方必須協議使用一致的驗證方式，才能建立IPSec連線。

  #.Kerberos V5 protocol。
  #.使用下列憑證授權單位(CA)的憑證：支援X.509規格的憑證。
  #.使用這個字串來保護金鑰間的交換(預先共用金鑰)
    若建立IPsec 連線的雙方在事前已共享秘鑰(密碼或字串等等)，
    則可在此填入秘鑰。

#.連線類型(IPsec  Connection Types)：指定安全規則要套用至哪些連線類型。
  #.所有網路連線(All Network Connections)：套用至電腦的全部網路連線。
  #.區域網路(Local Area Network)：僅套用至區域網路連線。
  #.遠端存取(Remote Access)：僅套用至遠端存取或撥號連線。

#.通道設定(IPsec  Tunneling)：這就是先前提到的通道模式功能。
  這個規則並沒有指定IPsec通道：

#.不使用通道模式。
#.由這個IP位址來指定通道的結束點
#.使用通道模式，並指定對方的IP位址。

