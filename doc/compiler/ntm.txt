非確定型圖靈機
--------------

如果不加特殊說明，通常所說的圖靈機都是確定型圖靈機。
非確定型圖靈機和確定型圖靈機的不同之處在於，在計算的每一時刻，
根據當前狀態和讀寫頭所讀的符號，機器存在多種狀態轉移方案，
機器將任意地選擇其中一種方案繼續運作，直到最後停機為止。
具體而言，其狀態轉移函數為

δ: Q\F × Γ → PowerSet(Q × Γ × {L, R})

其中 Q 是狀態集合，Γ 是帶字母表，L, R 分別表示讀寫頭向左和向右移動；
符號2A 表示集合A的冪集，即

例如，設非確定型圖靈機 M 的當前狀態為 q，當前讀寫頭所讀的符號為 x，若

則 M 將任意地選擇一個(qi,xi,di)，按其進行操作，然後進入下一步計算。

非確定型圖靈機 M 在輸入串 w 上的計算過程可以表示為一棵樹，
不同的分支對應著每一步計算的不同的可能性。
只要有任意一個分支進入接受狀態，則稱 M 接受 w；
只要有任意一個分支進入拒絕狀態，則稱 M 拒絕 w；

某些分支可能永遠無法停機，
但只要有一個分支可以進入接受或拒絕狀態，
我們就說 M 在輸入 w上可停機。
注意，我們規定 M 必須是無矛盾的，
即它不能有某個分支接受 w 而同時另一個分支拒絕 w，
這樣有矛盾的非確定型圖靈機是不合法的。

定理：

對於任意一個非確定型圖靈機 M，
存在一個確定型圖靈機 M'，
使得它們的語言相等，即L(M) = L(M')。

證明：

因為非確定型圖靈機的計算過程就是一棵樹，
因此我們只需遍歷該樹就可以模擬其計算過程。
一個簡單的想法是利用深度優先搜索來遍歷 M 的計算樹，
但這樣行不通，因為 M 的某些計算分支可能永遠不停機！

所以我們可以採用一種在演算法設計中稱為迭代加深搜索的技巧來遍歷 M 的計算樹。
具體證明如下：

對於非確定型圖靈機 M，
構造一個確定型圖靈機 M' 如下：

令k = 1；
深度優先地模擬 M 的每個分支的計算，
但每個分支最多只計算 k 步，
如果某個計算分支在 k 步內可以停機，
則M'也停機，並將該計算分支的計算結果輸出。
令 k 增加 1，跳轉到上一步繼續執行。

顯然，若 M 有某個分支可以停機，
則此M'也一定會找到該分支並停機。

因此L(M) = L(M')。

定理2：

如果語言 L 被非確定型圖靈機M在多項式時間內接受，
則一定存在多項式 P 使得語言 L 被時間複雜度為O(2**P(n))的確定型圖靈機程序所接受。

定理2說明了為什麼在證明P = NP之前，

所有的NP問題都只有指數時間複雜度演算法。


