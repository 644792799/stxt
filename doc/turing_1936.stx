Turing 1936 之論文筆記
----------------------
2013/02/11 週一於娘家

1.a-machine

自動機(automatic machines)指機器之運作完全由狀態決定。

其對比是選擇機(choice machine)，
當運作至模糊狀態時，須由外部操作員作出決定，
機器才能開始運作。

2.figure

數字僅含 0 及 1 兩種符號，
又稱為第一類符號(symbols of the first kind)。

3.symbols of the second kind

第二類符號是除了 0 及 1 的所有符號，
也就是第一類符號的補集。

4.table

指令表控制圖靈機的行為，
其下一步的行為由狀態及掃描字元決定。
其行為如下表：

行為      符號
右移      R 
左移      L 
不移動    N 
印出s符號 Ps 
刪除      E 等同印出空白符號

5.m-configuration

等同於狀態。

6.computing machine

只能印出第一類及第二類符號的自動機稱為計算機。

7.circular{p.233}

circular 機器會進入某個狀態，
此狀態不是停機，就是機器只能不斷印出第二類符號。

8.circle-free{p.233}

機器能不斷印出數字。

9.sequence

數字序列，簡稱為序列，或數列(figures)。

10.sequence computed by the machine

由一台圖靈機所印出的數列稱作機器計算之數列。

10.1.S(M)
義仁老家 2013/02/14 星期四 

非論文，由我所加的定義。

S(M) 表示由機器 M 所印出的數列。

11.number computed by the machine

機器計算之數字為其計算之數列前加一個小數點所表示之實數。

12.computable sequence

可計算數列為能由一台circle-free機器所印出的數列。

13.正規表示規則表
義仁 2013/02/15 星期五 

正規表示規則表中每條規則有 5 個欄位。

qi Sj Sk M ql 

分別表示機器狀態為 qi 、掃描符號為 Sj，
下一步動作為印出 Sk、移動指令為 M ，機器狀態轉換為 ql。

移動指令 M 有三種情形如下表：
R 右移
L 左移
N 不移動

13.1.qi

qi 表示第 i 個狀態。

預定狀態如下表：

q1 初始狀態

13.2.Si

Si 表示第 i 個符號。

預定符號如下表：

表示 符號
S0   空格
S1   0
s2   1

13.3.刪除操作

刪除操作 E 以 PS0 表示。
如下例：
qi Sj E  ,R qm
qi Sj PS0,R qm

13.4.移動操作

移動操作以印出掃描符號後移動表示。
如下例：
qi Sj     R qm
qi Sj PSj,R qm

14.S.D

標準描述(Standard Description)
僅含 A, C, D, L, R, N, ; 之符號列，
用來描述圖靈機。

R 右移
L 左移
N 不移動

14.3.正規表示轉換為 S.D

qi 由一個 D 後面重覆 i 個 A 表示。

Sj 由一個 D 後面重覆 j 個 C 表示。

15.D.N

Description Number，描述數

S.D 用下面規則所轉成的數列。

A=1
C=2
D=3
L=4
R=5
N=6
;=7

16.滿足數

一個 circle-free 之機器之 D.N。

本論文證明沒有一般方法可決定數字 n 是否為滿足數。

17.M(n)

表示機器 M 其 D.N 為 n。
 
18.U

U 表示通用機器，
在磁帶開始置入任一機器 M 之 S.D，
則 U 可印出和 M 一樣的數序。

這表示程式和資料都可放在同一個磁帶中。

19.可計算數列是可列舉的

因為每個可計算數列至少對應一個 D.N，
而沒有 D.N 可對應2個以上之可計算數列，
所以可計算數列是可列舉的。

20.可計算數列是不可列舉

假設可計算數列是可列舉的，可作以下定義。

20.1.αn

設 αn 表示第 n 個可計算數列。

20.2.φn(m)

φn(m) 表示第 n 個可計算數列中第 m 個數字。

20.3.β 數列

β 數列第 n 個數字為 1 - φn(n)。

20.4.歸謬法證明 β 數列不可計算
2013/02/13 星期三於高雄義仁村

若 β 數列是可計算的，則設其為第 K 個可計算數列，
可得
1 - φn(n) = φK(n)
令 n = K 則
1 - φn(n) = φn(n)
可得
1 = 2φn(n)
因為 1 不可能為偶數，
故得證。

20.5.

β 數列是否可計算，
等同於是否能以有限步驟完全列舉可計算數列。

20.6.

是否能以有限步驟完全列舉可計算數列，
等同於是否存在一般方法去判定某數 n 是否為 circle-free 機器之 D.N，
也就是判定 n 是否為滿足數。 

20.7.D假設為 circle-free 機器

D 為一機器，給定一個 S.D，
則可判定此 S.D 是表示 circular 或 circle-free 之機器。

若為 circular 機器之 S.D 則將其標記 u，
表示不可滿足 unsatisfactory；

若為 circle-free 機器之 S.D 則將其標記 s，
表示可滿足 satisfactory；

20.8.β' 數列

β 數列第 n 個數字為 φn(n)。

20.9.H

H 會以 1, 2, 3, .. , N-1, N, ... 等遞增方式列舉數字，
並作下列處理。

設此步驟已列舉至N ，
H 會先用 D 去判斷該數字 N 是否為滿足數，
若為滿足數，則 R(N) = R(N-1) + 1，

並將 N 轉成 S.D 再用 U 模擬 M(N) 印出其所計算之數列至第 R(N) 個數字，
再把第 R(N) 個數字附加到 β' 數列。

N 不為滿足數時，則 R(N) = R(N-1)。

20.9.1.H 行為

N = 0
R = 0
do 
    N = N+1
    if D(N) == s then
        R    = R + 1    
        Rth = U(N)[R]
        β'   = β' . S
loop

20.9.2.R(Record)

R 這個變數用來記錄共列舉出幾個可計算數。

R 0  = 0
R(N) = R(N-1) + 1 | D(N) == s
       R(N-1)     | otherwise

20.10.K

K 為 H 之 D.N。

20.11.H 無法計算第 R(K) 之數 

當 H 計算第 R(K) 之數字時，
由 H 之建構，可知其為 circle-free 機器，
故 K 應為滿足數，其不能標記為 "u"。

但是若其標記為 "s" 時，
則 H 先利用 U 模擬 M(K) 計算至第 K-1 之數列，
但 M(K) 要求第 R(K) 個數字時，
因為 M(K) = H，
又回到 M(K) 即是 H 的 U 模擬 M(K) 計算至第 K-1 之數列，
如此循環反復，第 R(K) 個數字永遠無法找到，
故 H 為 circular 機器。

21.E

給定任何機器 M 之 S.D 給 E，
E 能判定 M 是否會永遠印出 0。

21.1.Mi
2013/02/14 星期四 義仁

M1 會將 M 所計算之數列 S(M) 前 1 個 0 改成 ()，
原文為 0-bar。

M2 會將 M 所計算之數列 S(M) 前 2 個 0 改成 ()。

Mi 會將 M 所計算之數列 S(M) 前 i 個 0 改成 ()。

21.2.Mi之例子

假設 M 印出下面的數列。
M  = ...AB0 1AB0 0 10 AB...
則 Mi 會印出
M1 = ...AB()1AB0 0 10 AB...
M2 = ...AB()1AB()0 10 AB...
M2 = ...AB()1AB()()10 AB...
M2 = ...AB()1AB()()1()AB...

crunch out
Slang To perform operations on; manipulate or process (numerical or mathematical data)

21.2.F

給定任何機器 M 之 S.D 給 F，
F 能依序印出 M1, M2, ... 之 S.D。

21.3.G

G 接受一機器 M ，並利用 F 印出 M1, M2, ...之 S.D。
再利用 E 測試 M, M1, M2,... 之 S.D，
若 E 判斷輸入之機器永遠不印出 0，則印出 :0:。

G 的行為有三種。
G 會停止，若所有的 Mn 都會印出 0。
G 會不停的印出 0，若 M 不會印出 0。
G 會印出 0 後停止。

21.4.E(G)
2013/02/14 星期四 前鎮娘家

E 判定 G 永遠不會印出 0，
則表示 M 會永遠的印出 0。

E 判定 G 會印出 0，
則表示 M 不會永遠的印出 0。

21.5.G'

G 的行為有三種：
G 會停止，若所有的 Mn 都會印出 1。
G 會不停的印出 1，若 M 不會印出 1。
G 會印出 1 後停止。

21.7.E(G')

E 判定 G 永遠不會印出 1，
則表示 M 會永遠的印出 1。

E 判定 G 會印出 1，
則表示 M 不會永遠的印出 1。

21.8.結合 E(G) 及 E(G')可得出判定 M 是否為 circle-free之機器。

21.9.由前得判定機器不存在，依歸謬法可知 E 不存在。

22.F(x, y)
前鎮2013/02/15 週五 

後繼函數，命名繼承 Gödel 1930 年論文之用法，源自德文 nachfolger。

F(x, y) = y == x + 1

23.alternative squares
交替格法
前鎮2013/02/15 週五 

Turing 把帶子視為F格及E格交替接續。

23.1.F 格

F 格用在存放計算出的數字。

23.2.E 格

E 格(E squares)指暫存格，E 表示 eraseble。

23.3.mark

F 格 S 緊鄰右一個之 E 格，若其符號為α，
則稱 S 以α標示。

24.簡單操作

簡單操作只能改變正觀察到之方格符號。

25.immediately recognisable

直接辨識(immediately recognisable)指正掃描的數字，
或被單一符號標示之數列。

如以下數列：
1u2u3u4v5v6v

123 被 u標示，視為一組；456被v標示視為一組可直接辨識之數列。

26.RSi(x, y) 
義仁 2013/02/15 星期五 

此謂詞為在 M 的完整狀態中，在空格 y 的符號是 Si。

27.I(x, y)

此謂詞為在 M 的完整狀態中，正掃描到空格 y。

28.Kqm(x)

此謂詞為在 M 的完整狀態中，機器狀態為 qm。

29.G(x,y) - "x precedes y", not necessarily immediately

x 在 y 之前，不一定相鄰。

30 Inst{ qi, Sj Sk L ql} 

此謂詞描述指令為機器狀態為 qi 、掃描符號為 Sj，
下一步動作為印出 Sk，左移一格後，機器狀態轉為 ql。

(x, y, x', y'){ (Rsj(x , y )
                &  I(x , y )
                &Kqi(x     )
                &  F(x , x')
                &  F(y', y )
              ->(  I(x', y')
                &Rsk(x', y )
                &Kqi(x'    )
                &  F(y', z )
                v [( Rs0(x ,z) -> Rs0(x',z))
                  &( Rs1(x ,z) -> Rs1(x',z))
                  &...
                  &( RsM(x ,z) -> RsM(x',z))
                  ]
31.Des(M)

“Description-of-M”.
機器 M 之描述，為 Inst 之邏輯和。

32.Un(M)

此謂詞表示在 M 的一些完整描述中，存在 0。

Un(M) = (Ex u) [ N(u) 
               & (x)   (N(x)    -> (Ex x')F(x, x'))
               & (y, z)(F(y, z) -> N(y) & N(z))
               & (y)   Rs0(u, y)
               & I(u, u)
               & Kq1(u)
               & Des(M)] 
     -> (Ex s)(Ex t)[N(s) & N(t) & Rs1(s,t)]

