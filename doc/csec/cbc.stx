需要的加密方面的基礎知識
瞭解SSL原理需要一點點加密的概念，這裏把需要的概念做一下簡單闡述：

加密一般分為三類，對稱加密，非對稱加密及單向散列函數。

對稱加密：又分分組密碼和序列密碼。
分組密碼是將明文按一定的位長分組，明文組經過加密運算得到密文組，密文組經過解密運算
（加密運算的逆運算），還原成明文組。
序列密碼是指利用少量的密鑰（制亂元素）通過某種複雜的運算（密碼演算法）產生大量的為隨機位流，用於對明文位流的加密。
解密是指用同樣的密鑰和密碼演算法及與加密相同的為隨機位流，用以還原明文位流。

CBC(CipherBlockChaining)模式這個詞在分組密碼中經常會用到，它是指一個明文分組在被加密之前要與前一個的密文分組進行異或運算。當加密演算法用於此模式的時候除密鑰外，還需協商一個初始化向量（IV），這個IV沒有實際意義，只是在第一次計算的時候需要用到而已。採用這種模式的話安全性會有所提高。

分組密碼的典型例子為DES,RC5,IDEA。
序列密碼的典型例子為RC4。

公鑰加密：
簡單的說就是加密密鑰與解密密鑰不同，分私鑰和公鑰。這種方法大多用於密鑰交換，RSA便是一個我們熟知的例子。
還有一個常用的稱作DH，它只能用於密鑰交換，不能用來加密。

單向散列函數：
由於通道本身的干擾和人為的破壞，接受到的資訊可能與原來發出的資訊不同，一個通用的辦法就是加入校驗碼。
單向散列函數便可用於此用途，一個典型的例子是我們熟知的MD5,它產生128位的摘要，在現實中用的更多的是安全散列演算法（SHA），SHA的早期版本存在問題，目前用的實際是SHA－1，它可以產生160位的摘要，因此比128位散列更能有效抵抗窮舉攻擊。

由於單向散列的演算法都是公開的，所以其他人可以先改動原文，再生成另外一份摘要。解決這個問題的辦法可以通過HMAC（RFC2104）,它包含了一個密鑰，只有擁有相同密鑰的人才能鑒別這個散列。


