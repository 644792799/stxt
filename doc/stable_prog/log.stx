系統日誌(syslog)
================
0990324

系統日誌是資訊系統執行時所產出的訊息。

系統日誌概念雖然簡單，甚至對一般人而言或許不覺得重要，
但日誌已成為一個安全可靠的資訊系統不可獲缺的基本元件，

系統日誌必須滿足系統開發者除錯的需求、
系統管理者監控的需求及資訊安全管理者稽核的需求。

系統開發者觀點：
  對開發者而言，系統日誌最重要的目標是輔助系統除錯，
  讓程式開發者透過日誌檔找出系統可能的錯誤。

  當系統發生問題時，系統日誌往往是追尋問題唯一的線索和依據。
  而程式開發者在開發程式時也應盡可能的將所有的系統訊息寫到日誌上。

  對開發者而言，系統日誌也有過濾訊息的作用，
  日誌系統通常支援多個訊息通道，每個通道可設定給不同的人存取。

  通常系統發生例外時，會即時跳出畫面通知使用者系統負責人之連絡方式，
  例如下圖發生「發生系統錯誤，請聯絡資訊科 #303」，
  image[sys_error.jpg].系統錯誤畫面
  這對使用者而言已是足夠的訊息，
  依照我處理的經驗，
  一堆使用者相當陌生系統訊息，反而對使用者會造成極大恐慌。

  但對開發人員而言，此訊息並不夠，他需要系統例外訊息、狀態訊息等，
  而日誌系統可由另一個訊息通道記錄這些訊息供開發人員使用，
  這些額外的訊息並不會暴露給使用者看到。

系統管理者觀點:
  對系統管理者而言，藉由定期檢核系統日誌，
  可掌控系統目前的狀態。

  程式開發者通常也會將系統錯誤及例外寫入日誌中，
  當系統錯誤發生時，可藉以協助評估系統損害的範圍，
  作為擬定系統復原程序或向外求援的重要依據，
  提高系統可用性及避免系統故障。

  系統也可透過簡訊及電子郵件即時地將重要系統事件通報系統管理人員，
  達到即時地系統監控，使系統可用性達到最高。

資安管理者觀點:
  當系統被入侵時，系統日誌可作為事後稽核依據，
  並藉由分析日誌找出入侵來源，
  甚至可以做為証物，以取得賠償或保險理賠，
  或做更進一步系統安全性的研究。

  一個完善的安全日誌設計可有效嚇阻系統被不法使用。

  是故程式開發者則必須考慮系統可能會發生的安全事件並詳細地寫到日誌中， 
  通常我們把只記錄安全事件之日誌稱為安全日誌(audit trail)。 

日誌系統結構(log system)
------------------------
一個日誌系統通常由下面元件組成：
  Logger:
    程式人員使用日誌功能的介面。
  Handler:
    負責將日誌訊息輸出到各種通道上。
  Formatter:
    決定日誌訊息的格式。
  Config:
    設定日誌系統工具，
    也能透過外部設定檔進行日誌系統設定，

<doc\stable_prog\log_org.stx>
<doc\stable_prog\handler.stx>
<doc\stable_prog\formatter.stx>
<doc\stable_prog\hltb.stx>
