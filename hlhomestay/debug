testDatetimeIterator (datetime_iterator_test.UnitTest) ... ok
testAvailables (test_model.UnitTest) ... ok
testDailyBooks (test_model.UnitTest) ... ok
testIsHoliday (test_model.UnitTest) ... ok
testMonthlyBooks (test_model.UnitTest) ... ok
testPeriodAvailable (test_model.UnitTest) ... ok
testPrice (test_model.UnitTest) ... ok
testRecentlyReservations (test_model.UnitTest) ... ok
testReservation (test_model.UnitTest) ... ok
testRoom (test_model.UnitTest) ... ok
testSpecial (test_model.UnitTest) ... FAIL
testURLMaker (test_model.UnitTest) ... ok

======================================================================
FAIL: testSpecial (test_model.UnitTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "d:\stxt\hlhomestay\test\test_model.py", line 332, in testSpecial
    self.assertEqual(5000, self.b4.price())
AssertionError: 5000 != 7000L
-------------------- >> begin captured logging << --------------------
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 86, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 44, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 2, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 72, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 30, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 16, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 114, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 100, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 58, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 86, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 44, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 2, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 72, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 30, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 16, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 114, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 100, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 58, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 1, 0, 0)"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 86, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 44, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 2, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 72, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 30, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 16, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 114, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 100, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datastore_types.Key.from_path(u'Room', 58, _app=u'hlhomestay') == datastore_types.Key.from_path(u'Room', 128, _app=u'hlhomestay')"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 2, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 10, 1, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 12, 25, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
root: Level 9: Evaling filter expression "datetime.datetime(2010, 7, 23, 0, 0) == datetime.datetime(2010, 10, 3, 0, 0)"
--------------------- >> end captured logging << ---------------------

----------------------------------------------------------------------
Ran 12 tests in 2.422s

FAILED (failures=1)
